# uboot_env.hush - Init script for u-boot variables
# To use this script, use mkimage 
# This script is used to init u-boot variables 
# and to verify if the rootfs boots after an update. 


mmc dev 0

# Load files
# Kernel files
setenv bootfile bootcode.bin
setenv fdtfile bcm2710-rpi-3-b.dtb
setenv boot_kernel 'bootz ${kernel_addr_r} - ${fdt_addr_r}'
setenv bootargs earlyprintk root=${which_fs_part} rootwait console=tty1 console=ttyAMA0,115200
setenv put_files 'ext2load mmc 0:2 ${kernel_addr_r} /boot/zImage ; fatload mmc 0:1 ${fdt_addr_r} ${fdtfile}'

# We need to reload bootargs when partition changed
setenv reload_bootargs 'setenv bootargs earlyprintk root=${which_fs_part} rootwait console=tty1 console=ttyAMA0,115200'

# Update and boot partition
# Rootfs
setenv part 0 # Current rootfs partition
setenv FS_PART_0 /dev/mmcblk0p2 # Main rootfs partition
setenv FS_PART_1 /dev/mmcblk0p3 # Alt Rootfs partition
setenv which_fs_part ${FS_PART_0} # Current rootfs part 

setenv test_validity true # validate update 
setenv test_count 3 # number of try
setenv update_verif ' if test "${test_validity}" = "false" ; then setexpr test_count ${test_count} - 1 ; if test "${test_count}" = "0" ; then setexpr part ${part} ^ 1 ;fi; if test ${part} = "0" ; then setenv which_fs_part ${FS_PART_0}; else setenv which_fs_part ${FS_PART_1};fi;fi; run reload_bootargs ; echo " Partition change " ; saveenv ; run boot_kernel ' # Verify if rootfs boots

# Used if is_init_ok=0 to init u-boot variables
setenv put_init_script ' mmc dev 0 ; fatload mmc 0:1 ${scriptaddr} init_script.img '

# bootcmd is the first variable executed 
setenv bootcmd ' if test "${is_init_ok}" = "0" ; then run put_init_script ;source ${scriptaddr} ; else run put_files ; run update_verif; fi'

setenv is_init_ok 1

saveenv 
boot
